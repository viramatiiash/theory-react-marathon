// ! IIFE - Immediately Invoked Function Expression

(function () {
  console.log('function was called');
})(); // function was called
// функція вбрана у круглі дужки стає вже виразом. Друга пара дужок після функції забезпечує її виконання одразу ж у цьому ж місці. Цю функцію не потрібно викликати, за нас це робить друга пара дужок.
____________________________________________________________________________________________________________________
(named = function () {
  console.log('function was called');
})(); // перший раз виклик відбувається при оголошенні

named(); // ми можемо також називати ці функції і викликати пізніше
// у консолі функція відпрацює двічі, відповідно видасть двічі результат 'function was called'
____________________________________________________________________________________________________________________
(named = function (value = 5) {
  console.log(`function was called with value: ${value}` );
})(); 

named();
// Функція знову відпрацює двічі і видасть у консолі: function was called with value: 5
____________________________________________________________________________________________________________________
(named = function (value = 5) {
  console.log(`function was called with value: ${value}` );
})(); // function was called with value: 5

named(4); // function was called with value: 4
// якщо ми додамо аргумент сюди, тоді функція перше відпрацює моментально із дефолтним значенням, а потім дійде до другого виклику і замінить дефолтне значення на 4.
____________________________________________________________________________________________________________________
(named = function (value = 5) {
  console.log(`function was called with value: ${value}` );
})(4); // function was called with value: 4. Аргументи можна також додавати у ці дужки. Тоді перший раз функція відпрацює із аргументом 4.

named(); // function was called with value: 5. А другий раз із дефолтним значенням 5
____________________________________________________________________________________________________________________
var x = 5;
(function () {
  console.log('inside IIFY'); // inside IIFY
  var x = 10; // перекриває глобальну змінну х
  console.log(x); // 10
})();

console.log('outside IIFY'); // outside IIFY
console.log(x); // 5
____________________________________________________________________________________________________________________
let y = 5
{
  console.log('inside block');
  let y = 10;
  console.log(y);
}

console.log('outside block');
console.log(y);
// Тут нічого не зміниться, це просто нове написання того самого коду.